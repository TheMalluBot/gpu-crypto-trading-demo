[package]
name = "crypto_trader"
version = "0.1.0"
description = "GPU/CPU Crypto Trading Application"
authors = ["you"]
license = ""
repository = ""
edition = "2021"
rust-version = "1.70"

[build-dependencies]
tauri-build = { version = "2.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "2.0", features = ["rustls-tls"] }
tauri-plugin-shell = "2.0"

# Existing dependencies from root Cargo.toml
wgpu = "0.20"
tokio = { version = "1", features = ["full"] }
bytemuck = { version = "1.4", features = ["derive"] }
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }
rust_decimal = "1.35"
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1", features = ["v4", "serde"] }
hmac = "0.12"
sha2 = "0.10"
hex = "0.4"
futures-util = "0.3"
rand = "0.8"
aes-gcm = "0.10"
base64 = "0.22"
tempfile = "3.8"
url = "2.5"
futures-intrusive = "0.5"
sysinfo = "0.30"
tokio-tungstenite = "0.21"
regex = "1.10"
async-trait = "0.1"
thiserror = "1.0"
anyhow = "1.0"
# Phase 1 Security Guardian - Added proper KDF for secure key derivation
pbkdf2 = "0.12"
# Phase 1 Security Guardian - Secure string implementation
zeroize = { version = "1.7", features = ["derive"] }
subtle = "2.5"
# Authentication and JWT support
jsonwebtoken = "9.2"

# Native GPU support dependencies
ash = { version = "0.38", optional = true }  # Vulkan bindings
ash-window = { version = "0.13", optional = true }

# Platform-specific GPU dependencies
[target.'cfg(windows)'.dependencies]
windows = { version = "0.58", features = [
    "Win32_Graphics_Direct3D12",
    "Win32_Graphics_Direct3D",
    "Win32_Graphics_Dxgi",
    "Win32_Graphics_Dxgi_Common",
    "Win32_Foundation",
    "Win32_System_Threading",
], optional = true }

# CUDA support (when available)
[target.'cfg(any(target_os = "linux", target_os = "windows"))'.dependencies]
cuda-sys = { version = "0.2", optional = true }
cust = { version = "0.3", optional = true }  # High-level CUDA wrapper

# OpenCL support
ocl = { version = "0.19", optional = true }

# Metal support for macOS
[target.'cfg(target_os = "macos")'.dependencies]
metal = { version = "0.29", optional = true }
objc = { version = "0.2", optional = true }

[dev-dependencies]
# Phase 1 Test Engineer - Testing framework dependencies
tokio-test = "0.4"
mockall = "0.12"
wiremock = "0.6"

[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devUrl` is an URL
default = ["custom-protocol", "gpu-optimized"]
# this feature is used used for production builds where `devUrl` points to the filesystem
# DO NOT remove this
custom-protocol = ["tauri/custom-protocol"]
# GPU optimization features
gpu-optimized = []
nvidia-cuda = ["cuda-sys", "cust"]
windows-optimized = ["wgpu/dx12", "directx12"]
# Native GPU backend features
cuda = ["cuda-sys", "cust"]
directx12 = ["windows"]
vulkan = ["ash", "ash-window"]
opencl = ["ocl"]
metal = ["dep:metal", "objc"]
# Enable all native GPU backends
native-gpu-all = ["cuda", "directx12", "vulkan", "opencl"]
